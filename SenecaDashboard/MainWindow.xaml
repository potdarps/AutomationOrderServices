<Controls:MetroWindow x:Class="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Broussard_Dashboard"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                       
        mc:Ignorable="d"       
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"                     
        Title="Broussard Order Services" TitleAlignment="Left" WindowStartupLocation="CenterScreen" WindowState="Maximized" Background="White"
                      Icon="/Broussard_Dashboard;component/Images/SE_symbol_white.png">
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Label x:Name="lblNameOfScheduler" Foreground="White" FontFamily="Verdana" FontSize="16"/>
            <Button x:Name="btnGenQueue">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconModern Width="24" Height="24" Kind="CalendarFuture" />
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Generate Queue" />
                </StackPanel>
            </Button>
            <Button x:Name="btnMyqueue">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconModern Width="24" Height="24" Kind="ArrowLeft" />
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="My Queue" />
                </StackPanel>
            </Button>
            <Button x:Name="btnHome">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconModern Width="24" Height="24" Kind="HomeGarage" />
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Home" />
                </StackPanel>
            </Button>
            <Button x:Name="btnSelectScheduler">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconModern Width="24" Height="24" Kind="ManWalk" />
                    <TextBlock Margin="4 0 0 0" VerticalAlignment="Center" Text="Select Scheduler" />
                </StackPanel>
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Window.Resources>
       
        <ResourceDictionary> 
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/HamburgerMenuTemplate.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />     
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <!--  This is the template for the menu items.  -->
            <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type Controls:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <ObjectDataProvider x:Key="DisplayModeEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Controls:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Controls:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="VisibilityEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <Style x:Key="MetroListBoxItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, Mode=OneWay, FallbackValue=Stretch, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Padding" Value="5 0 0 0" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="{Binding Path=(RenderOptions.ClearTypeHint), Mode=OneWay, FallbackValue=Auto, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, Mode=OneWay, FallbackValue=Center, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            </Style>
            <materialDesignConverters:BrushRoundConverter x:Key="BrushRoundConverter" />
            <Style x:Key="HamburgerMenuItemStyle"
           BasedOn="{StaticResource MetroListBoxItem}"
           TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="FocusVisualStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=ItemFocusVisualStyle, Mode=OneWay, FallbackValue={x:Null}}" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Foreground, Mode=OneWay}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="IsEnabled" Value="{Binding IsEnabled, Mode=OneWay, FallbackValue=true}" />
                <Setter Property="IsTabStop" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=IsTabStop, Mode=OneWay, FallbackValue=True}" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle x:Name="SelectionIndicator"
                                           Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                           Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                           Fill="{TemplateBinding Foreground}"
                                           Focusable="False"
                                           Opacity="0.0" />
                                    </Grid>
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
            </Style>
            <Style x:Key="HamburgerMenuCreatorsItemStyle"
                      BasedOn="{StaticResource HamburgerMenuItemStyle}"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource GrayBrush9}" />
                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle x:Name="SelectionIndicator"
                                                   Width="{DynamicResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                                   Height="{DynamicResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                                   Fill="{TemplateBinding Foreground}"
                                                   Focusable="False"
                                                   Opacity="0.0" />
                                    </Grid>
                                    <materialDesign:Ripple Padding="{TemplateBinding Padding}"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                           Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                                           Focusable="False"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HamburgerMenuCreatorsStyle"
                   BasedOn="{StaticResource {x:Type Controls:HamburgerMenu}}"
                   TargetType="{x:Type Controls:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
            </Style>
            

            <local:ProgressPointDesignationsChop x:Key="ProgressPointDesignation"/>
            <local:Q2CLISLSSSplitConverter x:Key="Q2CLISLSSSplit"/>
        </ResourceDictionary>
    </Window.Resources>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl/>        
    </Controls:MetroWindow.Flyouts>
    <Window.DataContext >
        <local:VM1/>
    </Window.DataContext>
    <Grid>
        <Controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                    HamburgerWidth="48"
                                    IsPaneOpen="False"
                                    ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                    ItemTemplate="{StaticResource MenuItemTemplate}"
                                    OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                    SelectedIndex="0"
                                    Style="{StaticResource HamburgerMenuCreatorsStyle}"
                                    VerticalScrollBarOnLeftSide="False" PaneBackground="#FF007ACC">

            <!--  Items  -->
            <Controls:HamburgerMenu.ItemsSource>
                <Controls:HamburgerMenuItemCollection>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Engine}" Label="SWGR/PZ4" >
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridMCC" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGSWGRPZ4" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="Horizontal" 
                                       Grid.Row="0"   >
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>                                 
                                    
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:BoxIcons Kind=RegularBox}" Label="RTI">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridBOXTRIM" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGRTI" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>                                  

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=TransmissionTower}" Label="BUSWAY">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridCAPBANK" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGBUSWAY" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>
                                   

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat}" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:RPGAwesome Kind=BatteryWhite}" Label="SWBD">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridVARSET" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGSWBD" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>
                                    <DataGrid.ContextMenu >
                                        <ContextMenu >
                                            <MenuItem Header="Assign Product"   Tag="DGSWBD">
                                                <MenuItem Header="Shift to MCC ETO" Click="ChangeProduct_ClickAsync" Tag="MCC ETO"/>
                                                <MenuItem Header="Shift to Panelboards" Click="ChangeProduct_ClickAsync" Tag="Panelboards"/>
                                                <MenuItem Header="Shift to BXTR" Click="ChangeProduct_ClickAsync" Tag="BXTR"/>
                                                <MenuItem Header="Shift to MCE" Click="ChangeProduct_ClickAsync" Tag="MCE"/>
                                                <MenuItem Header="Shift to CDO" Click="ChangeProduct_ClickAsync" Tag="CDO"/>
                                                <MenuItem Header="Shift to Varset" Click="ChangeProduct_ClickAsync" Tag="Varset"/>
                                                <MenuItem Header="Shift to Spare parts" Click="ChangeProduct_ClickAsync" Tag="Spare parts"/>
                                                <MenuItem Header="Shift to Drives" Click="ChangeProduct_ClickAsync" Tag="Drives"/>
                                                <MenuItem Header="Shift to MISC" Click="ChangeProduct_ClickAsync" Tag="MISC"/>
                                                <MenuItem Header="Shift to Capbank" Click="ChangeProduct_ClickAsync" Tag="Capbank"/>
                                                <MenuItem Header="Shift to FAB" Click="ChangeProduct_ClickAsync" Tag="FAB"/>
                                            </MenuItem>
                                            <MenuItem Header="Assign to me" Click="AssignTome_ClickAsync" Tag="DGSWBD"/>
                                            <MenuItem Header="Open ODR" Click="OpenODR_ClickAsync" Tag="DGSWBD"/>
                                            <MenuItem Header="Print ODR" Click="PrintODR_ClickAsync" Tag="DGSWBD"/>
                                            <MenuItem Header="Open in SEA" Click="OpenInSEA_ClickAsync" Tag="DGSWBD"/>
                                            <MenuItem Header="Open in CT01" Click="OpenInCT01_ClickAsync" Tag="DGSWBD"/>
                                        </ContextMenu>
                                    </DataGrid.ContextMenu>

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat}" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:Modern Kind=Projector}" Label="GIS">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridCDO" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGGIS" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>
                                   

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:JamIcons Kind=Screwdriver}" Label="DH/VOX">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridDRIVES" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGDHVOX" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>
                                   

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:RPGAwesome Kind=MetalGate}" Label="HQRACK">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridFAB" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGHQRACK" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>
                                    
                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                     
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Tools}" Label="Other">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid x:Name="GridBLANK" Margin="2">
                                <Grid.DataContext>
                                    <local:VM1/>
                                </Grid.DataContext>
                                <DataGrid  x:Name="DGOTHER" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                                    <DataGrid.Resources >
                                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                                    </DataGrid.Resources>
                                    

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <DataGrid.Columns >
                                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations,Converter={StaticResource ProgressPointDesignation}}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                                            <DataGridTextColumn.ElementStyle>
                                                <Style>
                                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                                </Style>
                                            </DataGridTextColumn.ElementStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                                        <Setter Property="Background" Value="LawnGreen" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding ActionStat }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate >
                                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                                        <Setter Property="Background" Value="OrangeRed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Label  Content ="{Binding InternalGroup }" />
                                                    </Border>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                                    </DataGrid.Columns>

                                </DataGrid>
                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                </Controls:HamburgerMenuItemCollection>
            </Controls:HamburgerMenu.ItemsSource>

            <!--  Options  -->
            <Controls:HamburgerMenu.OptionsItemsSource>
                <Controls:HamburgerMenuItemCollection>
                    <Controls:HamburgerMenuIconItem Icon="{iconPacks:Material Kind=Settings}" Label="Settings">
                        <Controls:HamburgerMenuIconItem.Tag>
                            <Grid>

                            </Grid>
                        </Controls:HamburgerMenuIconItem.Tag>
                    </Controls:HamburgerMenuIconItem>
                </Controls:HamburgerMenuItemCollection>
            </Controls:HamburgerMenu.OptionsItemsSource>

            <Controls:HamburgerMenu.ContentTemplate>
                <DataTemplate DataType="{x:Type Controls:HamburgerMenuIconItem}">
                    <Grid Margin="20 0 10 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                                       Margin="0 "
                                       Padding="0"
                                       FontFamily="{DynamicResource HeaderFontFamily}"
                                       FontSize="20"
                                       Text="{Binding Label}" />
                        <ScrollViewer Grid.Row="1"
                                          Focusable="False"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">
                            <ContentControl Content="{Binding Tag}" Focusable="False" />
                        </ScrollViewer>
                    </Grid>
                </DataTemplate>
            </Controls:HamburgerMenu.ContentTemplate>

        </Controls:HamburgerMenu>
        <Controls:Flyout x:Name="FlyoutMyQueue" Header="My Queue" Position="left"    FontSize="10"     Theme="Accent" >
            <Controls:Flyout.Resources >
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
            </Controls:Flyout.Resources>
            <Grid >
                <DataGrid  x:Name="DGMYQueue" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                    <DataGrid.Resources >
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                    </DataGrid.Resources>
                    <DataGrid.ContextMenu >
                        <ContextMenu >
                            <MenuItem Header="Process Job" Click="ProcessJobs_Click" Tag="DGMYQueue"/>
                            <MenuItem Header="Open in CT01" Click="OpenInCT01_ClickAsync" Tag="DGMYQueue"/>
                            <MenuItem Header="Open ODR" Click="OpenODR_ClickAsync" Tag="DGMYQueue"/>
                            <MenuItem Header="Print ODR" Click="PrintODR_ClickAsync" Tag="DGMYQueue"/>
                            <MenuItem Header="Open in SEA" Click="OpenInSEA_ClickAsync" Tag="DGMYQueue"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding}"></TextBlock>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.Columns >
                        <DataGridTextColumn   Header="Q2C" Width="auto"  Binding ="{Binding Q2CLISLSS,Converter={StaticResource Q2CLISLSSSplit}}" IsReadOnly="True"/>
                        <DataGridTextColumn   Header="Rev" Width="auto"  Binding ="{Binding CORev}" IsReadOnly="True"/>
                        <DataGridTextColumn   Header="Progress point" Width="auto"  Binding ="{Binding ProgressPoint}" IsReadOnly="True"/>
                        <DataGridTextColumn   Header="Category" Width="auto"  Binding ="{Binding Category}" IsReadOnly="True"/>
                        <DataGridTextColumn   Header="Designations" Width="auto"  Binding ="{Binding Designations}" IsReadOnly="True"/>
                        <DataGridTextColumn   Header="Line Code" Width="auto"  Binding ="{Binding LineCode}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Catalogue" Width="100" Binding="{Binding CatalogueNumber}" IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                                    <Setter Property="TextBlock.TextAlignment" Value="Left" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn   Header="Hold" Width="auto" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate >
                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ActionStat}" Value = "N">
                                                        <Setter Property="Background" Value="LawnGreen" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Label  Content ="{Binding ActionStat }" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn   Header="PO" Width="auto"  Binding ="{Binding PONumber}" IsReadOnly="True"/>
                        <DataGridTextColumn   Header="ACC No" Width="auto"  Binding ="{Binding AccountNo}" IsReadOnly="True"/>
                        <DataGridTextColumn   Header="Project Manager" Width="auto"  Binding ="{Binding PM}" IsReadOnly="True"/>
                        <DataGridTemplateColumn  Header="IGA" Width="auto" IsReadOnly="True">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate >
                                    <Border CornerRadius="5" HorizontalAlignment="Center">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding InternalGroup}" Value="True">
                                                        <Setter Property="Background" Value="OrangeRed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Label  Content ="{Binding InternalGroup }" />
                                    </Border>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn  Header="OrigProm" Width="auto" IsReadOnly="True" Binding ="{Binding OrigProm,StringFormat=d}"/>
                        <DataGridTextColumn  Header="CurrProm" Width="auto" IsReadOnly="True" Binding ="{Binding CurrProm,StringFormat=d}"/>
                        <DataGridTextColumn  Header="CommitedTo" Width="auto" IsReadOnly="True" Binding ="{Binding CommitedTo,StringFormat=d}"/>
                        <DataGridTextColumn  Header="Queue Gen Date" Width="auto" IsReadOnly="True" Binding ="{Binding dateQueueGenerated,StringFormat=d}"/>
                        <DataGridTextColumn  Header="Queue Gen By" Width="auto" IsReadOnly="True" Binding ="{Binding QueueGeneratedBy}"/>
                    </DataGrid.Columns>

                </DataGrid>
            </Grid>
        </Controls:Flyout>
        <Controls:Flyout x:Name="FlyoutSelectScheduler" Header="Select Scheduler" Position="left"    FontSize="10"   Width="Auto"  Theme="Accent" >
             
            <Grid HorizontalAlignment="Center">
                <DataGrid  x:Name="DGSchedulerList" FontSize="12"  Foreground="Black"  CanUserAddRows="false"   AutoGenerateColumns="False" FontFamily="Verdana"   Background="{x:Null}" BorderBrush="{x:Null}"  GridLinesVisibility="All" 
                                       Grid.Row="0">
                    <DataGrid.Resources >
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                    </DataGrid.Resources>
                    <DataGrid.ContextMenu >
                        <ContextMenu >
                            <MenuItem Header="Load Queue" Click="LoadSelectedSchedulerQueue_ClickAsync"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Columns >
                        <DataGridTextColumn   Header="Name" Width="auto"  Binding ="{Binding displayName}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Controls:Flyout>
        <Grid VerticalAlignment="Center" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>            
            <Label x:Name="lblProgress" FontSize="32" HorizontalAlignment="Center"   Grid.Row="0"  />
            <ProgressBar x:Name="progreeBarGenQueue"  Height="30" Width="auto"  Grid.Row="1"
                                         Margin="50"
                                         Maximum="100"
                                         Minimum="0"
                                          Value="{Binding Path=ProcessODRProgress}" Visibility="Hidden"   />
        </Grid>
        
        
    </Grid>
</Controls:MetroWindow>
